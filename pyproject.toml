[project]
name = "slidegenie"
version = "0.1.0"
description = "AI-powered academic presentation generator"
authors = [
    {name = "SlideGenie Team"}
]
readme = "README.md"
requires-python = "^3.11"
dependencies = [
    "fastapi (>=0.116.1,<0.117.0)",
    "uvicorn[standard] (>=0.35.0,<0.36.0)",
    "pydantic (>=2.11.7,<3.0.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "python-multipart (>=0.0.20,<0.0.21)",
    "python-jose[cryptography] (>=3.5.0,<4.0.0)",
    "passlib[bcrypt] (>=1.7.4,<2.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "sqlalchemy (>=2.0.42,<3.0.0)",
    "alembic (>=1.16.4,<2.0.0)",
    "redis (>=6.2.0,<7.0.0)",
    "minio (>=7.2.16,<8.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "structlog (>=25.4.0,<26.0.0)",
    "sentry-sdk (>=2.34.0,<3.0.0)",
    "sqlalchemy-utils (>=0.41.2,<0.42.0)",
    "pgvector (>=0.4.1,<0.5.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
pytest-cov = "^6.2.1"
black = "^25.1.0"
flake8 = "^7.3.0"
mypy = "^1.17.0"
isort = "^6.0.1"
pre-commit = "^4.2.0"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_third_party = ["fastapi", "pydantic", "sqlalchemy"]
skip_glob = ["*/migrations/*"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
strict_equality = true
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-ra -q --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/migrations/*", "*/__init__.py"]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]

